[
  {
    "type": "body",
    "description": "What is the output of the following program?",
    "amount": 80,
    "code": [
      "class Derived \n",
      "{\n",
      "    public void getDetails(String temp)\n ",
      "    { \n",
      "        System.out.println(\"Derived class\" + temp); \n",
      "    }\n",
      "}\n",
      "public class Test extends Derived\n",
      "{\n",
      "    public int getDetails(String temp)\n",
      "    {\n",
      "        System.out.println(\"Test class\" + temp);\n",
      "        return 0;\n",
      "    }\n",
      "    public static void main(String[] args)\n",
      "    {\n",
      "        Test obj = new Test();\n",
      "        obj.getDetails(\"GFG\");\n",
      "    }\n",
      "}\n"
    ],
    "choices": {
      "a": "Derived class",
      "b": "Test class",
      "c": "Runtime error",
      "d": "Compilation error"
    },
    "answer": "d",
    "explanation": "Final and static methods cannot be overridden"
  },
  {
    "type": "body",
    "description": "What is the output of the following program?",
    "amount": 120,
    "code": [
      "import java.io.IOException;\n",
      "class Derived\n",
      "{\n",
      "    public void getDetails() throws IOException //line 23\n",
      "    {\n",
      "        System.out.println(\"Derived class\");\n",
      "    }\n",
      "}\n",
      "public class Test extends Derived\n",
      "{\n",
      "    public void getDetails() throws Exception //line 24\n",
      "    {\n",
      "        System.out.println(\"Test class\");\n",
      "    }\n",
      "    public static void main(String[] args) throws IOException //line 25\n",
      "    {\n",
      "        Derived obj = new Test();\n",
      "        obj.getDetails();\n",
      "    }\n",
      "}"
    ],
    "choices": {
      "a": "Compilation error due to line 23",
      "b": "Compilation error due to line 24",
      "c": "Compilation error due to line 25",
      "d": "All the above"
    },
    "answer": "b",
    "explanation": "The exception thrown by the overriding method should not be new or more broader checked exception. In the code above, Exception is more broader class of checked exception than IOException, so this results in compilation error."
  }
]